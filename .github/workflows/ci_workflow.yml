name: MLflow Project CI, Docker Build & Push

on:
  push:
    branches:
      - main
    paths:
      - 'MLProject/**' # Trigger jika ada perubahan di dalam folder MLProject
  workflow_dispatch:

jobs:
  train-model-and-build-docker:
    runs-on: ubuntu-latest # Menggunakan environment Linux terbaru
    
    steps:
      # Langkah 1: Mengambil (checkout) kode dari repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Langkah 2: Menyiapkan environment Python untuk menjalankan MLflow CLI
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7' # Pastikan versi ini konsisten

      # Langkah 3: Install MLflow (untuk bisa menjalankan 'mlflow run')
      - name: Install MLflow
        run: pip install mlflow==2.20.0 # Atau versi yang lebih baru jika diperlukan

      # Langkah 4: Menjalankan MLflow Project untuk re-training model
      - name: Run MLflow Project (Re-Training Model)
        env:
          # Ambil dari GitHub Secrets
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        # Menjalankan entry point 'main' dari file MLproject yang ada di dalam folder ./MLProject
        run: mlflow run ./MLProject --experiment-name "TelcoChurn_CI_Retraining_K3"

      # Langkah 5: Login ke Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Dari GitHub Secrets
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # Dari GitHub Secrets

      # Langkah 6: Set up Docker Buildx (diperlukan untuk build-push-action)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Langkah 7: Build dan Push Docker image ke Docker Hub
      - name: Build and push Docker image
        id: docker_build # Memberi ID pada step ini agar outputnya bisa diakses
        uses: docker/build-push-action@v5
        with:
          context: ./MLProject # Direktori yang berisi Dockerfile dan semua konten untuk build
          file: ./MLProject/Dockerfile # Path ke Dockerfile relatif dari root repository
          push: true # Set true untuk push ke registry (Docker Hub) setelah build berhasil
          # Menggunakan secret DOCKERHUB_USERNAME untuk nama user dan nama image yang sudah kamu tentukan
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sml-kriteria3-image:k3-latest
