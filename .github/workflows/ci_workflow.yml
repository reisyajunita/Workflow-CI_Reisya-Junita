name: MLflow Project CI, Docker Build & Push

on:
  push:
    branches:
      - main
    paths:
      - 'MLProject/**'
  workflow_dispatch:

jobs:
  train-model-and-build-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      # LANGKAH 3: Install semua dependensi dari requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./MLProject/requirements.txt

      # Langkah 4: Jalankan MLflow Project
      # MLflow sekarang akan menggunakan environment yang sudah kita siapkan di Langkah 3
      - name: Run MLflow Project (Re-Training Model)
        env:
          # Ambil dari GitHub Secrets
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: mlflow run ./MLProject --experiment-name "TelcoChurn_CI_Retraining_K3"

      # Langkah 5: Login ke Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Langkah 6: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Langkah 7: Build dan Push Docker image
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./MLProject
          file: ./MLProject/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sml-kriteria3-image:k3-latest

      # Langkah 8: Cetak informasi image
      - name: Print Docker image digest
        run: echo "Docker Image Digest:${{ steps.docker_build.outputs.digest }}"